RoleInvMap(r, toggleInverse(r)) <- InclusionAxioms(r, s), isRoleName(r)
RoleInvMap(s, toggleInverse(s)) <- InclusionAxioms(r, s), isRoleName(s)
RoleInvMap(toggleInverse(r), r) <- InclusionAxioms(r, s), isInverse(r)
RoleInvMap(toggleInverse(s), s) <- InclusionAxioms(r, s), isInverse(s)
ConceptNameView(c) <- InclusionAxioms(c, d), isConceptName(c)
ConceptNameView(d) <- InclusionAxioms(c, d), isConceptName(d)
isRN(r) <- RoleInv(r, s)
Stage1View(r2, o1, o2) <- RoleInclusions(r1, r2), isRN(r2), RoleAssertions(r1, o1, o2), not RoleAssertions(r2, o1, o2)
Stage1View(s, o2, o1) <- RoleInclusions(r1, r2), RoleInv(s, r2), RoleAssertions(r1, o1, o2), not RoleAssertions(s, o2, o1)
RIClosure(r, o1, o2) <- RoleAssertions(r, o1, o2)
RIClosure(r, o1, o2) <- Stage1(r, o1, o2)
Stage2View(c2, o) <- InclusionAxioms(c1, c2), ConceptNames(c2), ConceptAssertions(c1, o), not ConceptAssertions(c2, o)
Stage2View(c, o1) <- InclusionAxioms(r, c), ConceptNames(c), RoleAssertions(r, o1, o2), not ConceptAssertions(c, o1)
Stage2View(c, o2) <- InclusionAxioms(r2, c), ConceptNames(c), RoleInv(r1, r2), RoleAssertions(r1, o1, o2), not ConceptAssertions(c, o2)
CNClosure(c, o) <- ConceptAssertions(c, o)
CNClosure(c, o) <- Stage2(c, o)
SubRoleNotEq(r, s) <- RoleInclusions(r, s), not RoleInclusions(s, r)
EqRole(r, s) <- RoleInclusions(r, s), RoleInclusions(s, r)
SatisfiesConcept(c, o) <- CNClosure(c, o)
SatisfiesConcept(r, o1) <- RIClosure(r, o1, o2)
SatisfiesConcept(s, o2) <- RIClosure(r, o1, o2), RoleInv(r, s)
Role(r) <- RoleInv(r, s)
Role(s) <- RoleInv(r, s)
isNewRole(r1) <- QualifiedExistentials(r1, r2, c)
InferredExistential(r, o) <- InclusionAxioms(c, r), Role(r), SatisfiesConcept(c, o)
SatisfiesRN(r, o1) <- RIClosure(r, o1, o2)
SatisfiesInv(r, o2) <- RIClosure(r, o1, o2)
SatisfiesQRN(r, c, o1) <- RIClosure(r, o1, o2), CNClosure(c, o2)
SatisfiesQInv(r, c, o2) <- RIClosure(r, o1, o2), CNClosure(c, o1)
FirstLevelView(r, o) <- InclusionAxioms(c, r), SatisfiesConcept(c, o), isRN(r), not isNewRole(r), not SatisfiesRN(r, o)
FirstLevelView(r, o) <- InclusionAxioms(c, r), SatisfiesConcept(c, o), RoleInv(s, r), not SatisfiesInv(s, o)
FirstLevelView(r, o) <- InclusionAxioms(c, r), SatisfiesConcept(c, o), QualifiedExistentials(r, s, d), isRN(s), not SatisfiesQRN(s, d, o)
FirstLevelView(r, o) <- InclusionAxioms(c, r), SatisfiesConcept(c, o), QualifiedExistentials(r, s, d), RoleInv(t, s), not SatisfiesQInv(t, d, o)
RedundantView(r, o) <- SubRoleNotEq(s, r), FirstLevel(s, o), FirstLevel(r, o)
RedundantView(r, o) <- EqRole(s, r), biggerThan(s, r), FirstLevel(s, o), FirstLevel(r, o)
RedundantView(r2, o) <- QualifiedExistentials(r1, s, c), QualifiedExistentials(r2, s, c), biggerThan(r1, r2), FirstLevel(r1, o), FirstLevel(r2, o)
RedundantView(r2, o) <- QualifiedExistentials(r1, s, c1), QualifiedExistentials(r2, s, c2), RoleInv(r1, invR1), RoleInv(r2, invR2), InclusionAxioms(invR1, c2), not InclusionAxioms(invR2, c1), FirstLevel(r1, o), FirstLevel(r2, o)
RedundantView(r2, o) <- QualifiedExistentials(r1, s, c1), QualifiedExistentials(r2, s, c2), biggerThan(r1, r2), RoleInv(r1, invR1), RoleInv(r2, invR2), InclusionAxioms(invR1, c2), InclusionAxioms(invR2, c1), FirstLevel(r1, o), FirstLevel(r2, o)
RedundantView(r2, o) <- QualifiedExistentials(r1, s1, c), QualifiedExistentials(r2, s2, c), SubRoleNotEq(s1, s2), FirstLevel(r1, o), FirstLevel(r2, o)
RedundantView(r2, o) <- QualifiedExistentials(r1, s1, c), QualifiedExistentials(r2, s2, c), biggerThan(r1, r2), EqRole(s1, s2), FirstLevel(r1, o), FirstLevel(r2, o)
RedundantView(r2, o) <- QualifiedExistentials(r1, s1, c1), QualifiedExistentials(r2, s2, c2), SubRoleNotEq(s1, s2), RoleInv(r1, invR1), InclusionAxioms(invR1, c2), FirstLevel(r1, o), FirstLevel(r2, o)
RedundantView(r2, o) <- QualifiedExistentials(r1, s1, c1), QualifiedExistentials(r2, s2, c2), EqRole(s1, s2), RoleInv(r1, invR1), RoleInv(r2, invR2), InclusionAxioms(invR1, c2), not InclusionAxioms(invR2, c1), FirstLevel(r1, o), FirstLevel(r2, o)
RedundantView(r2, o) <- QualifiedExistentials(r1, s1, c1), QualifiedExistentials(r2, s2, c2), biggerThan(r1, r2), EqRole(s1, s2), RoleInv(r1, invR1), RoleInv(r2, invR2), InclusionAxioms(invR1, c2), InclusionAxioms(invR2, c1), FirstLevel(r1, o), FirstLevel(r2, o)
RedundantView(r2, o) <- QualifiedExistentials(r2, s, c), SubRoleNotEq(r1, s), not isNewRole(r1), RoleInv(r1, invR1), InclusionAxioms(invR1, c), FirstLevel(r1, o), FirstLevel(r2, o)
Anon(r) <- FirstLevel(o, r), not Redundant(o, r)
Stage3(r, o, r) <- FirstLevel(o, r), isRN(r), not isNewRole(r), not Redundant(o, r)
Stage3(s, r, o) <- FirstLevel(o, r), RoleInv(s, r), not Redundant(o, r)
Stage3(r2, o, r1) <- FirstLevel(o, r1), RoleInclusions(r1, r2), isRN(r2), not Redundant(o, r1)
Stage3(r2, r1, o) <- FirstLevel(o, r1), RoleInclusions(r1, s), RoleInv(r2, s), not Redundant(o, r1)
Stage4(s, o1, o2) <- Anonymous(r), GeneratingRoles(r, s, o1, o2), isRN(s)
Stage4(t, o2, o1) <- Anonymous(r), GeneratingRoles(r, s, o1, o2), RoleInv(t, s)
Stage5(c, r) <- Anonymous(r), GeneratingConcepts(c, r)
isConceptName(id) <= BITAND(id,12)=0
isRoleName(role) <= BITAND(role,10)=8
isInverse(role) <= BITAND(role,2)=2
isRole(role) <= BITAND(role,8)=8
isAnonIndv(individual) <= individual > 0
toggleInverse(role) <= BITXOR(role,2)
biggerThan(x, y) <= x < y